#!/usr/bin/env php
<?php
/**
 * This file is part of AlphaRPC (http://alphacomm.github.io/alpharpc/)
 *
 * @license BSD-3 (please see the LICENSE file distributed with this source code.
 * @copyright Copyright (c) 2010-2013, Alphacomm Group B.V. (http://www.alphacomm.nl/)
 *
 * @author Reen Lokum <reen@alphacomm.nl>
 * @package AlphaRPC
 * @subpackage Status
 */

define('APP_ROOT', realpath(__DIR__.'/..'));

require APP_ROOT.'/vendor/autoload.php';

use \AlphaRPC\Client\ZMStatus;

$status = new ZMStatus();
$status->connect('tcp://127.0.0.1:60003');

try {
    $warning = $critical = array();

    $serviceList = $status->serviceList();

    foreach ($serviceList as $service) {
        $msg = $service['service'].' ('.$service['queue'].'/'.$service['available'].'/'.$service['busy'].')';
        if ($service['available'] < 1) {
            $critical[] = $msg;
        } else if ($service['queue'] > 50) {
            $critical[] = $msg;
        } else if ($service['queue'] > 25) {
            $warning[] = $msg;
        }
    }

    if (count($critical) > 0) {
        $warning = array_merge($critical, $warning);
        echo 'CRITICAL '.implode(', ', $warning).PHP_EOL;
        exit(2);
    }

    if (count($warning) > 0) {
        echo 'WARNING '.implode(', ', $warning).PHP_EOL;
        exit(1);
    }
    echo 'OK '.count($serviceList).' services.'.PHP_EOL;
    exit(0);
} catch (Exception $e) {
    echo 'CRITICAL Exception: ' . $e->getMessage() . PHP_EOL;
    exit(2);
}
