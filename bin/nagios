#!/usr/bin/env php
<?php
/**
 * This file is part of AlphaRPC (http://alpharpc.net/)
 *
 * @license BSD-3 (please see the LICENSE file distributed with this source code.
 * @copyright Copyright (c) 2010-2013, Alphacomm Group B.V. (http://www.alphacomm.nl/)
 *
 * @author Reen Lokum <reen@alphacomm.nl>
 * @package AlphaRPC
 * @subpackage Status
 */

// Make sure the ipc files don't end up all over the server.

use \AlphaRPC\Client\AlphaRPCStatus;

call_user_func(function() {
    /* @var $container Symfony\Component\DependencyInjection\ContainerInterface */
    $container = require_once dirname(__DIR__).'/app/bootstrap.php';

    $status = new AlphaRPCStatus();

    try {
        $warning = $critical = array();

        $actionList = $status->queueStatus($container->getParameter('worker_handler'));

        foreach ($actionList as $action) {
            $msg = $action['action'].' ('.$action['queue'].'/'.$action['available'].')';
            if ($action['available'] < 1) {
                $critical[] = $msg;
            } else if ($action['queue'] > 50) {
                $critical[] = $msg;
            } else if ($action['queue'] > 25) {
                $warning[] = $msg;
            }
        }

        if (count($critical) > 0) {
            $warning = array_merge($critical, $warning);
            echo 'CRITICAL '.implode(', ', $warning).PHP_EOL;
            exit(2);
        }

        if (count($warning) > 0) {
            echo 'WARNING '.implode(', ', $warning).PHP_EOL;
            exit(1);
        }
        echo 'OK '.count($actionList).' actions.'.PHP_EOL;
        exit(0);
    } catch (Exception $e) {
        echo 'CRITICAL Exception: ' . $e->getMessage() . PHP_EOL;
        exit(2);
    }
});
